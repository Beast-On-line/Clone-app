[{"D:\\Clone app\\Google-Clone-main\\Google-Clone-main\\src\\index.js":"1","D:\\Clone app\\Google-Clone-main\\Google-Clone-main\\src\\StateProvider.js":"2","D:\\Clone app\\Google-Clone-main\\Google-Clone-main\\src\\App.js":"3","D:\\Clone app\\Google-Clone-main\\Google-Clone-main\\src\\reducer.js":"4","D:\\Clone app\\Google-Clone-main\\Google-Clone-main\\src\\reportWebVitals.js":"5","D:\\Clone app\\Google-Clone-main\\Google-Clone-main\\src\\pages\\SearchPage.js":"6","D:\\Clone app\\Google-Clone-main\\Google-Clone-main\\src\\pages\\Home.js":"7","D:\\Clone app\\Google-Clone-main\\Google-Clone-main\\src\\useGoogleSearch.js":"8","D:\\Clone app\\Google-Clone-main\\Google-Clone-main\\src\\components\\Search.js":"9","D:\\Clone app\\Google-Clone-main\\Google-Clone-main\\src\\keys.js":"10"},{"size":477,"mtime":1613497249000,"results":"11","hashOfConfig":"12"},{"size":364,"mtime":1613497249000,"results":"13","hashOfConfig":"12"},{"size":479,"mtime":1613497249000,"results":"14","hashOfConfig":"12"},{"size":377,"mtime":1613497249000,"results":"15","hashOfConfig":"12"},{"size":362,"mtime":1613497249000,"results":"16","hashOfConfig":"12"},{"size":3776,"mtime":1677138160277,"results":"17","hashOfConfig":"12"},{"size":974,"mtime":1677138152929,"results":"18","hashOfConfig":"12"},{"size":575,"mtime":1677219125549,"results":"19","hashOfConfig":"12"},{"size":1650,"mtime":1613497249000,"results":"20","hashOfConfig":"12"},{"size":91,"mtime":1677218708894,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1d9nvcl",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Clone app\\Google-Clone-main\\Google-Clone-main\\src\\index.js",[],["45","46"],"D:\\Clone app\\Google-Clone-main\\Google-Clone-main\\src\\StateProvider.js",[],"D:\\Clone app\\Google-Clone-main\\Google-Clone-main\\src\\App.js",[],"D:\\Clone app\\Google-Clone-main\\Google-Clone-main\\src\\reducer.js",[],"D:\\Clone app\\Google-Clone-main\\Google-Clone-main\\src\\reportWebVitals.js",[],"D:\\Clone app\\Google-Clone-main\\Google-Clone-main\\src\\pages\\SearchPage.js",["47","48"],"import React from \"react\";\nimport { useStateValue } from \"../StateProvider\";\nimport useGoogleSearch from \"../useGoogleSearch\";\nimport \"./SearchPage.css\";\nimport Search from \"../components/Search\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport ImageIcon from \"@material-ui/icons/Image\";\nimport LocalOfferIcon from \"@material-ui/icons/LocalOffer\";\nimport RoomIcon from \"@material-ui/icons/Room\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport { Link } from \"react-router-dom\";\n\nfunction SearchPage() {\n  const [{ term }, dispatch] = useStateValue();\n\n  const { data } = useGoogleSearch(term);\n\n  console.log(data);\n\n  return (\n    <div className=\"searchPage\">\n      <div className=\"searchPage__header\">\n        <Link to=\"/\">\n          <img\n            className=\"searchPage__logo\"\n            src=\"https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png\"\n            alt=\"image\"\n          />\n        </Link>\n\n        <div className=\"searchPage__headerBody\">\n          <Search hideButtons />\n          <div className=\"searchPage__options\">\n            <div className=\"searchPage__optionsLeft\">\n              <div className=\"searchPage__option\">\n                <SearchIcon />\n                <Link to=\"/all\">All</Link>\n              </div>\n              <div className=\"searchPage__option\">\n                <DescriptionIcon />\n                <Link to=\"/news\">News</Link>\n              </div>\n              <div className=\"searchPage__option\">\n                <ImageIcon />\n                <Link to=\"/images\">Images</Link>\n              </div>\n              <div className=\"searchPage__option\">\n                <LocalOfferIcon />\n                <Link to=\"/shopping\">shopping</Link>\n              </div>\n              <div className=\"searchPage__option\">\n                <RoomIcon />\n                <Link to=\"/maps\">maps</Link>\n              </div>\n              <div className=\"searchPage__option\">\n                <MoreVertIcon />\n                <Link to=\"/more\">more</Link>\n              </div>\n            </div>\n\n            <div className=\"searchPage__optionsRight\">\n              <div className=\"searchPage__option\">\n                <Link to=\"/settings\">Settings</Link>\n              </div>\n              <div className=\"searchPage__option\">\n                <Link to=\"/tools\">Tools</Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {term && (\n        <div className=\"searchPage__results\">\n          <p className=\"searchPage__resultCount\">\n            About {data?.searchInformation.formattedTotalResults} results (\n            {data?.searchInformation.formattedSearchTime} seconds) for{\" \"}\n            <strong>{term}</strong>\n          </p>\n\n          {data?.items.map((item) => (\n            <div className=\"searchPage__result\">\n              <a className=\"searchPage__resultLink\" href={item.link}>\n                {item.pagemap?.cse_image?.length > 0 &&\n                  item.pagemap?.cse_image[0]?.src && (\n                    <img\n                      className=\"searchPage__resultImage\"\n                      src={\n                        item.pagemap?.cse_image?.length > 0 &&\n                        item.pagemap?.cse_image[0]?.src\n                      }\n                      alt=\"\"\n                    />\n                  )}\n                {item.displayLink} â–¾\n              </a>\n              <a className=\"searchPage__resultTitle\" href={item.link}>\n                <h2>{item.title}</h2>\n              </a>\n\n              <p className=\"searchPage__resultSnippet\">{item.snippet}</p>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default SearchPage;\n","D:\\Clone app\\Google-Clone-main\\Google-Clone-main\\src\\pages\\Home.js",[],"D:\\Clone app\\Google-Clone-main\\Google-Clone-main\\src\\useGoogleSearch.js",[],"D:\\Clone app\\Google-Clone-main\\Google-Clone-main\\src\\components\\Search.js",["49"],"import React, { useState } from \"react\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport MicIcon from \"@material-ui/icons/Mic\";\nimport { Button } from \"@material-ui/core\";\nimport \"./Search.css\";\nimport { useStateValue } from \"../StateProvider\";\nimport { useHistory } from \"react-router-dom\";\nimport { actionTypes } from \"../reducer\";\n\nfunction Search({ hideButtons = false }) {\n  const [{}, dispatch] = useStateValue();\n  const history = useHistory();\n  const [term, setTerm] = useState(\"\");\n\n  const search = (e) => {\n    e.preventDefault();\n    console.log(\"search!\");\n\n    dispatch({\n      type: actionTypes.SET_SEARCH_TERM,\n      term: term,\n    });\n\n    history.push(`/search`);\n  };\n\n  return (\n    <form className=\"search\">\n      <div className=\"search__input\">\n        <SearchIcon className=\"search__inputIcon\" />\n        <input value={term} onChange={(e) => setTerm(e.target.value)} />\n        <MicIcon />\n      </div>\n      {!hideButtons ? (\n        <div className=\"search__buttons\">\n          <Button onClick={search} type=\"submit\" variant=\"outlined\">\n            Google Search\n          </Button>\n          <Button variant=\"outlined\">I'm Feeling Lucky</Button>\n        </div>\n      ) : (\n        <div className=\"search__buttons\">\n          <Button\n            className=\"search__buttonsHidden\"\n            onClick={search}\n            type=\"submit\"\n            variant=\"outlined\"\n          >\n            Google Search\n          </Button>\n          <Button className=\"search__buttonsHidden\" variant=\"outlined\">\n            I'm Feeling Lucky\n          </Button>\n        </div>\n      )}\n    </form>\n  );\n}\n\nexport default Search;\n","D:\\Clone app\\Google-Clone-main\\Google-Clone-main\\src\\keys.js",[],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":15,"column":20,"nodeType":"56","messageId":"57","endLine":15,"endColumn":28},{"ruleId":"58","severity":1,"message":"59","line":25,"column":11,"nodeType":"60","endLine":29,"endColumn":13},{"ruleId":"61","severity":1,"message":"62","line":11,"column":10,"nodeType":"63","messageId":"64","endLine":11,"endColumn":12},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-global-assign","no-unsafe-negation"]